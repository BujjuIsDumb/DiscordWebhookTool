<Application x:Class="DiscordWebhookTool.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DiscordWebhookTool"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--#region Colors-->
        <SolidColorBrush x:Key="Window.Background" Color="#36393f"/>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#5865f2"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#4752c4"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#3c45a5"/>
        <SolidColorBrush x:Key="TextBox.Background" Color="#202225"/>
        <!--#endregion-->
       
        <!--#region Discord Theme-->
        <!--Window-->
        <Style x:Key="DiscordWindowTheme" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource Window.Background}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="./#Whitney Light"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <!--Button-->
        <Style x:Key="DiscordButtonTheme" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBox-->
        <Style x:Key="DiscordTextBoxTheme" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource TextBox.Background}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="5"  Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
    </Application.Resources>
</Application>
